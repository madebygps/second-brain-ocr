[project]
name = "second-brain-ocr"
version = "0.1.0"
description = "Automated OCR and vector search indexing for your second brain notes"
requires-python = ">=3.13"
dependencies = [
    "azure-ai-documentintelligence>=1.0.2",
    "azure-ai-formrecognizer>=3.3.3",
    "azure-identity>=1.25.1",
    "azure-search-documents>=11.6.0",
    "openai>=2.3.0",
    "python-dotenv>=1.1.1",
    "requests>=2.32.5",
    "watchdog>=6.0.0",
]

[project.scripts]
second-brain-ocr = "second_brain_ocr.main:main"

[tool.setuptools.package-data]
second_brain_ocr = ["py.typed"]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "ruff>=0.14.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src/second_brain_ocr",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
]
ignore = [
    "SIM117",    # Allow nested with statements in tests for readability
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN"]
"scripts/*" = ["ANN"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
